services:
  # API Service
  api:
    build:
      context: .
      dockerfile: docker/Dockerfile
    container_name: hms-api
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - .env
    environment:
      - DB_HOST=db
    ports:
      - "${SERVER_PORT:-8080}:8080"
    networks:
      - hms-network

  # Nginx Service
  nginx:
    image: nginx:alpine
    container_name: hms-nginx
    restart: unless-stopped
    ports:
      - "${NGINX_PORT:-8081}:80"
    volumes:
      - ./docker/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - api
    networks:
      - hms-network

  # Database Service
  db:
    image: postgres:latest
    container_name: hms-db
    restart: unless-stopped
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=HMS@2025
      - POSTGRES_DB=hms
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - hms-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 5s
      timeout: 5s
      retries: 10

networks:
  hms-network:
    driver: bridge

volumes:
  postgres_data:
